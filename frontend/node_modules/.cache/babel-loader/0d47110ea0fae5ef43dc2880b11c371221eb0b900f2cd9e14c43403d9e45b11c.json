{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add response interceptor for better error handling\naxiosInstance.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nconst authApi = {\n  async login(username, password) {\n    try {\n      const response = await axiosInstance.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      return token;\n    } catch (error) {\n      var _error$response2;\n      console.error('Login error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error;\n    }\n  },\n  async register(userData) {\n    try {\n      console.log('Registering user with data:', userData);\n      const response = await axiosInstance.post('/auth/register', userData);\n      console.log('Registration response:', response.data);\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      return token;\n    } catch (error) {\n      var _error$response3;\n      console.error('Registration error:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw error;\n    }\n  },\n  logout() {\n    localStorage.removeItem('token');\n  },\n  getToken() {\n    return localStorage.getItem('token');\n  },\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n};\n\n// Add token to all requests\naxiosInstance.interceptors.request.use(config => {\n  const token = authApi.getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\nexport default authApi;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","headers","interceptors","response","use","error","_error$response","console","data","message","Promise","reject","authApi","login","username","password","post","token","localStorage","setItem","_error$response2","register","userData","log","_error$response3","logout","removeItem","getToken","getItem","isAuthenticated","request","config","Authorization"],"sources":["/Users/apple/Desktop/FloodGuard/frontend/src/api/auth.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add response interceptor for better error handling\naxiosInstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nconst authApi = {\n  async login(username, password) {\n    try {\n      const response = await axiosInstance.post('/auth/login', { username, password });\n      const { token } = response.data;\n      localStorage.setItem('token', token);\n      return token;\n    } catch (error) {\n      console.error('Login error:', error.response?.data || error.message);\n      throw error;\n    }\n  },\n\n  async register(userData) {\n    try {\n      console.log('Registering user with data:', userData);\n      const response = await axiosInstance.post('/auth/register', userData);\n      console.log('Registration response:', response.data);\n      const { token } = response.data;\n      localStorage.setItem('token', token);\n      return token;\n    } catch (error) {\n      console.error('Registration error:', error.response?.data || error.message);\n      throw error;\n    }\n  },\n\n  logout() {\n    localStorage.removeItem('token');\n  },\n\n  getToken() {\n    return localStorage.getItem('token');\n  },\n\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n};\n\n// Add token to all requests\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = authApi.getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\nexport default authApi; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}