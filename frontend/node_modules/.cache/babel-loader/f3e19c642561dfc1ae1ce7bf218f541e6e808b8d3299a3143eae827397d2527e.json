{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  // 10 second timeout\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add response interceptor for better error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$config, _error$config2, _error$response, _error$response2, _error$response3, _error$response3$data, _error$response4, _error$response5;\n  console.error('API Error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    message: error.message\n  });\n\n  // Create a more detailed error object\n  const enhancedError = new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'An unexpected error occurred');\n  enhancedError.status = (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status;\n  enhancedError.data = (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data;\n  throw enhancedError;\n});\nconst reportsApi = {\n  async submitReport(reportData) {\n    const formData = new FormData();\n    Object.keys(reportData).forEach(key => {\n      if (key === 'image' && reportData[key]) {\n        formData.append('image', reportData[key]);\n      } else {\n        formData.append(key, reportData[key]);\n      }\n    });\n    const response = await api.post('/reports', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  async getReports(page = 0, size = 10) {\n    try {\n      const response = await api.get('/reports', {\n        params: {\n          page,\n          size\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching reports:', error);\n      throw error;\n    }\n  },\n  async getMyReports(page = 0, size = 10) {\n    try {\n      const response = await api.get('/reports/my', {\n        params: {\n          page,\n          size\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching my reports:', error);\n      throw error;\n    }\n  },\n  async getNearbyReports(latitude, longitude, radius = 5000) {\n    try {\n      const response = await api.get('/reports/nearby', {\n        params: {\n          latitude,\n          longitude,\n          radius\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching nearby reports:', error);\n      throw error;\n    }\n  }\n};\nexport default reportsApi;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","response","use","error","_error$config","_error$config2","_error$response","_error$response2","_error$response3","_error$response3$data","_error$response4","_error$response5","console","url","config","method","status","data","message","enhancedError","Error","reportsApi","submitReport","reportData","formData","FormData","Object","keys","forEach","key","append","post","getReports","page","size","get","params","getMyReports","getNearbyReports","latitude","longitude","radius"],"sources":["/Users/apple/Desktop/FloodGuard/frontend/src/api/reports.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000, // 10 second timeout\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add response interceptor for better error handling\napi.interceptors.response.use(\n  response => response,\n  error => {\n    console.error('API Error:', {\n      url: error.config?.url,\n      method: error.config?.method,\n      status: error.response?.status,\n      data: error.response?.data,\n      message: error.message,\n    });\n    \n    // Create a more detailed error object\n    const enhancedError = new Error(\n      error.response?.data?.message || \n      error.message || \n      'An unexpected error occurred'\n    );\n    enhancedError.status = error.response?.status;\n    enhancedError.data = error.response?.data;\n    throw enhancedError;\n  }\n);\n\nconst reportsApi = {\n  async submitReport(reportData) {\n    const formData = new FormData();\n    Object.keys(reportData).forEach(key => {\n      if (key === 'image' && reportData[key]) {\n        formData.append('image', reportData[key]);\n      } else {\n        formData.append(key, reportData[key]);\n      }\n    });\n    \n    const response = await api.post('/reports', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  async getReports(page = 0, size = 10) {\n    try {\n      const response = await api.get('/reports', {\n        params: { page, size }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching reports:', error);\n      throw error;\n    }\n  },\n\n  async getMyReports(page = 0, size = 10) {\n    try {\n      const response = await api.get('/reports/my', {\n        params: { page, size }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching my reports:', error);\n      throw error;\n    }\n  },\n\n  async getNearbyReports(latitude, longitude, radius = 5000) {\n    try {\n      const response = await api.get('/reports/nearby', {\n        params: { latitude, longitude, radius }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching nearby reports:', error);\n      throw error;\n    }\n  }\n};\n\nexport default reportsApi; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}