# Server Configuration
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/floodguard
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# JWT Configuration
jwt.secret=your-256-bit-secret
jwt.expiration=86400000

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=902637526677-ccejqovseh3d34q5gscls4ec42m9ncql.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Logging Configuration
logging.level.root=INFO
logging.level.com.floodguard=DEBUG
logging.level.org.springframework.security=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Python ML Service Configuration
ml.service.url=http://localhost:5000
ml.service.timeout=5000

# Weather API Configuration
weather.api.key=${WEATHER_API_KEY}
weather.api.url=https://api.openweathermap.org/data/2.5/weather

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=15m 